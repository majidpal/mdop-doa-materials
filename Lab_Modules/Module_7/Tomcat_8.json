{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Sample Template to launch instance with Tomcat configured on port 8080.",
  "Mappings": {
      "RegionMap": {
        "eu-central-1": {
          "AMI": "ami-2882ddc3"
        },
        "eu-west-1": {
          "AMI": "ami-1caef165"
        },
        "us-east-1": {
          "AMI": "ami-b81dbfc5"
        },
        "us-west-2": {
          "AMI": "ami-0ebdd976"
        },
        "us-west-1": {
          "AMI": "ami-78485818"
        },
        "ap-southeast-1":{
          "AMI": "ami-16a4fe6a"
        },
        "ap-southeast-2": {
          "AMI": "ami-dda36dbf"
        },
        "ap-south-1": {
          "AMI": "ami-2014314f"
        }
      }
  }, 
  "Parameters": {
    "VpcID": {
      "Description": "VPC Id of existing stack. See Output section of your stack.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "VPCSubnet": {
      "Description": "Public subnet Id of your stack. See Output section of your stack.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "AvailabilityZone": {
      "Description": "The availability zone of your stack. Go to VPC -> Subnet in AWS console.",
      "Type": "String",
      "Default": "eu-west-1a"
    },
	"KeyName": {
		"Description": "Key-pair name to use.",
		"Type": "AWS::EC2::KeyPair::KeyName"
	}
  },
  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access and HTTP access on the configured port",
        "VpcId" : {
          "Ref": "VpcID"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
		  {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {
            "Ref": "KeyName"
		},
    "ImageId": {
        "Fn::FindInMap": [
            "RegionMap", {
                "Ref": "AWS::Region"
            },
            "AMI"
        ]
    },
    "AssociatePublicIpAddress": true,
    "SecurityGroups": [
      {
        "Ref": "InstanceSecurityGroup"
      }
    ],
    "InstanceType": "t2.medium",
		"UserData": {
			"Fn::Base64": {
				"Fn::Join": [
					"",
					[
						"#!/bin/bash\n",
						"export IP=$(hostname --ip-address)\n",
						"yum update -y\n",
						"curl -fsSL https://get.docker.com/ | sh\n",
						"service docker start\n",
						"yum install -y unzip wget\n",
						"sed -i s/SELINUX=enforcing/SELINUX=permissive/ /etc/selinux/config\n",
						"setenforce 0\n",
						"export IP=$(hostname --ip-address)\n",
						"mkdir -p /data/tomcat/webapps/\n",
						"chmod -R 0755 /data/tomcat/webapps\n",
						"wget https://tomcat.apache.org/tomcat-8.0-doc/appdev/sample/sample.war -O /data/tomcat/webapps/sample.war\n",
						"unzip /data/tomcat/webapps/sample.war -d /data/tomcat/webapps/ROOT\n",
						"docker run -dt --name=tomcat8 -v /data/tomcat/webapps/:/usr/local/tomcat/webapps/ -p 80:8080 tomcat:8.0\n"
					]
				]
			}
		}
      }
    },

    "WebServerGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones" : [
            {
                "Ref": "AvailabilityZone"
            }
          ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "Tags" : [ 
          {
            "Key" : "Name",
            "Value" : "Academy-Module7-Tomcat8",
            "PropagateAtLaunch" : "true"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VPCSubnet"
          }
        ]
      }
    }
  }
}

